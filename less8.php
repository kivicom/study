<?php

/*Дан массив $arr. Подсчитайте количество элементов этого массива. */
$arr = [1,2,3,4,5];
echo count($arr);
echo '<hr>';

/*Дан массив $arr. С помощью функции count выведите последний элемент данного массива. */
$arr = [1,2,3,4,5];
for($i = 1; $i < count($arr); $i++);
echo $i;
echo '<hr>';

/*Дан массив с числами. Проверьте, что в нем есть элемент со значением 3.  */
$arr = [1,2,3,4,5];
if (in_array(3, $arr)){
    echo "I have";
}else{
    echo "I have not";
}
echo '<hr>';

/*Дан массив [1, 2, 3, 4, 5]. Найдите сумму элементов данного массива.   */
$arr = [1,2,3,4,5];
echo array_sum($arr);
echo '<hr>';

/*Дан массив [1, 2, 3, 4, 5]. Найдите произведение (умножение) элементов данного массива. */
$arr = [1,2,3,4,5];
echo array_product($arr);
echo '<hr>';

/*Дан массив $arr. С помощью функций array_sum и count найдите среднее арифметическое элементов (сумма элементов делить на их количество) данного массива. */
$arr = [1,2,3,4,5];
echo array_sum($arr) / count($arr);
echo '<hr>';

/*Создайте массив, заполненный числами от 1 до 100. */
$arr = range(1, 100);
var_dump($arr);
echo '<hr>';

/*Создайте массив, заполненный буквами от 'a' до 'z'.  */
$arr = range('a', 'z');
var_dump($arr);
echo '<hr>';

/*Создайте строку '1-2-3-4-5-6-7-8-9' не используя цикл. */
$arr = range(1, 9);
echo implode('-', $arr);

echo '<hr>';

/*Найдите сумму чисел от 1 до 100 не используя цикл.  */
echo array_sum(range(1, 100));
echo '<hr>';

/*Найдите произведение чисел от 1 до 10 не используя цикл.   */
echo array_product(range(1, 10));
echo '<hr>';

/*Даны два массива: первый с элементами 1, 2, 3, второй с элементами 'a', 'b', 'c'. Сделайте из них массив с элементами 1, 2, 3, 'a', 'b', 'c'. */
$arr = [1,2,3];
$arr2 = ['a','b','c'];
var_dump(array_merge($arr, $arr2));
echo '<hr>';

/*Дан массив с элементами 1, 2, 3, 4, 5. С помощью функции array_slice создайте из него массив $result с элементами 2, 3, 4. */
$arr = [1,2,3,4,5];
var_dump(array_slice($arr, 1, 3));
echo '<hr>';

/*Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice преобразуйте массив в [1, 4, 5]. */
$arr = [1,2,3,4,5];
array_splice($arr, 1, 2);
print_r($arr);
echo '<hr>';

/*Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice запишите в новый массив элементы [2, 3, 4]. */
$arr = [1,2,3,4,5];
$res = array_splice($arr, 1, 3);
print_r($res);
echo '<hr>';

/*Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5]. */
$arr = [1,2,3,4,5];
array_splice($arr, 3, 0, ['a', 'b', 'c']);
print_r($arr);
echo '<hr>';

/*Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e']. */
$arr = [1,2,3,4,5];
array_splice($arr, 1, 0, ['a', 'b']);
// [1,a,b,2,3,4,5]
array_splice($arr, 6, 0, 'c');
// [1,a,b,2,3,4,c,5]
array_splice($arr, 8, 0, 'e');
//[1, 'a', 'b', 2, 3, 4, 'c', 5, 'e']
print_r($arr);
echo '<hr>';

/*Дан массив 'a'=>1, 'b'=>2, 'c'=>3'. Запишите в массив $keys ключи из этого массива, а в $values – значения. */
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
print_r(array_keys($arr));
print_r(array_values($arr));
echo '<hr>';

/*Даны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Создайте с их помощью массив 'a'=>1, 'b'=>2, 'c'=>3'. */
$arr1 = ['a', 'b', 'c'];
$arr2 = [1, 2, 3];
print_r(array_combine($arr1, $arr2));
echo '<hr>';

/*Дан массив 'a'=>1, 'b'=>2, 'c'=>3. Поменяйте в нем местами ключи и значения. */
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
print_r(array_flip($arr));
echo '<hr>';

/*Дан массив с элементами 1, 2, 3, 4, 5. Сделайте из него массив с элементами 5, 4, 3, 2, 1. */
$arr = [1, 2, 3, 4, 5];
print_r(array_reverse($arr));
echo '<hr>';

/*Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-'. */
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
echo array_search('-', $arr);
echo '<hr>';

/*Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-' и удалите его с помощью функции array_splice. */
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
$res = array_search('-', $arr);
array_splice($arr, $res, 1);
print_r($arr);
echo '<hr>';

/*Дан массив ['a', 'b', 'c', 'd', 'e']. Поменяйте элемент с ключом 0 на '!', а элемент с ключом 3 - на '!!'. */
$arr = ['a', 'b', 'c', 'd', 'e'];
$res = array_replace($arr, [0=>'!', 3=>'!!']);
print_r($res);
echo '<hr>';

/*Дан массив '3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'. Попробуйте на нем различные типы сортировок. */
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
sort($arr);
print_r($arr);
echo '<hr>';

$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
rsort($arr);
print_r($arr);
echo '<hr>';

$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
rsort($arr);
print_r($arr);
echo '<hr>';

$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
asort($arr);
print_r($arr);
echo '<hr>';

$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
asort($arr);
print_r($arr);
echo '<hr>';

$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
arsort($arr);
print_r($arr);
echo '<hr>';

$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
ksort($arr);
print_r($arr);
echo '<hr>';

$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
krsort($arr);
print_r($arr);
echo '<hr>';

function func(){
    return;
}
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
usort($arr, 'func');
print_r($arr);
echo '<hr>';

$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
uasort($arr, 'func');
print_r($arr);
echo '<hr>';

$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
uksort($arr, 'func');
print_r($arr);
echo '<hr>';

$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
natsort($arr);
print_r($arr);
echo '<hr>';

/*Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный ключ из данного массива. */
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
echo array_rand($arr);
echo '<hr>';

/*Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный элемент данного массива. */
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
$key = array_rand($arr);
print_r($arr[$key]);
echo '<hr>';

/*Дан массив $arr. Перемешайте его элементы в случайном порядке. */
$arr = [1, 2, 3, 4, 5];
shuffle($arr);
var_dump($arr);
echo '<hr>';

/*Заполните массив числами от 1 до 25 с помощью range, а затем перемешайте его элементы в случайном порядке. */
$arr = range(1, 25);
shuffle($arr);
var_dump($arr);
echo '<hr>';

/*Создайте массив, заполненный буквами от 'a' до 'z' так, чтобы буквы шли в случайном порядке и не повторялись.*/
$arr = range('a','z');
shuffle($arr);
var_dump($arr);
echo '<hr>';

/*Сделайте строку длиной 6 символов, состоящую из маленьких английских букв, расположенных в случайном порядке. Буквы не должны повторяться. */
$arr = range('a','z');
$res = array_slice($arr, 0,6);
shuffle($res);
var_dump($res);
echo '<hr>';

/*Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Удалите из него повторяющиеся элементы. */
$arr = ['a', 'b', 'c', 'b', 'a'];
var_dump(array_unique($arr));
echo '<hr>';

/*Дан массив с элементами 1, 2, 3, 4, 5. Выведите на экран его первый и последний элемент, причем так, чтобы в исходном массиве они исчезли. */
$arr = [1, 2, 3, 4, 5];
var_dump(array_shift($arr));
echo '<br>';
var_dump(array_pop($arr));
echo '<br>';
var_dump($arr);
echo '<hr>';

/*Дан массив с элементами 1, 2, 3, 4, 5. Добавьте ему в начало элемент 0, а в конец - элемент 6. */
$arr = [1, 2, 3, 4, 5];
array_unshift($arr, 0);
var_dump($arr);
echo '<br>';
var_dump(array_push($arr, 6));
var_dump($arr);
echo '<hr>';

/*Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8. С помощью цикла и функций array_shift и array_pop выведите на экран его элементы в следующем порядке: 18273645.*/
$arr = [1, 2, 3, 4, 5, 6, 7, 8];
$str = '';
while (count($arr) > 0) {
    $str .= array_shift($arr);
    $str .= array_pop($arr);
}
echo $str;
echo '<hr>';

/*Дан массив с элементами 'a', 'b', 'c'. Сделайте из него массив с элементами 'a', 'b', 'c', '-', '-', '-'. */
$arr = ['a', 'b', 'c'];
$arr = array_pad($arr, 6, '-');
var_dump($arr);
echo '<hr>';

/*Заполните массив 10-ю буквами 'x'. */
$arr = array_fill(0,10,'x');
var_dump($arr);
echo '<hr>';

/*Создайте массив, заполненный целыми числами от 1 до 20. С помощью функции array_chunk разбейте этот массив на 5 подмассивов ([1, 2, 3, 4]; [5, 6, 7, 8] и т.д.)*/
$arr = range(1, 20);
$arr = array_chunk($arr, 4);
print_r($arr);
echo '<hr>';

/*Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Подсчитайте сколько раз встречается каждая из букв. */
$arr = ['a', 'b', 'c', 'b', 'a'];
print_r(array_count_values($arr));
echo '<hr>';

/*Дан массив с элементами 1, 2, 3, 4, 5. Создайте новый массив, в котором будут лежать квадратные корни данных элементов. */

$arr = [1, 2, 3, 4, 5];
$arr = array_map('sqrt', $arr);
print_r($arr);
echo '<hr>';

/*Дан массив с элементами '<b>php</b>', '<i>html</i>'. Создайте новый массив, в котором из элементов будут удалены теги. */
$arr = ['<b>php</b>', '<i>html</i>'];
$arr = array_map('strip_tags', $arr);
print_r($arr);
echo '<hr>';

/* Дан массив с элементами ' a ', ' b ', ' с '. Создайте новый массив, в котором будут данные элементы без концевых пробелов. */
$arr = [' a ', ' b ', ' с '];
$arr = array_map('trim', $arr);
var_dump($arr);
echo '<hr>';

/*Дан массив с элементами 1, 2, 3, 4, 5 и массив с элементами 3, 4, 5, 6, 7. Запишите в новый массив элементы, которые есть и в том, и в другом массиве. */
$arr1 = [1, 2, 3, 4, 5];
$arr2 = [3, 4, 5, 6, 7];
$result = array_intersect($arr1, $arr2);
var_dump($result);
echo '<hr>';

/*Дан массив с элементами 1, 2, 3, 4, 5 и массив с элементами 3, 4, 5, 6, 7. Запишите в новый массив элементы, которые есть и в том, и в другом массиве. */
$arr1 = [1, 2, 3, 4, 5];
$arr2 = [3, 4, 5, 6, 7];
$result = array_diff($arr1, $arr2);
var_dump($result);
echo '<hr>';

/* Дана строка '1234567890'. Найдите сумму цифр из этой строки не используя цикл. */
$str = '1234567890';
//$str = implode(',', $str);
$arr = str_split($str, 1);
$arr = array_sum($arr);
print_r($arr);
echo '<hr>';

/*Создайте массив ['a'=>1, 'b'=2... 'z'=>26] не используя цикл. */
$arr1 = range('a', 'z');
$arr2 = range(1, count($arr1));
$res = array_combine($arr1, $arr2);
print_r($res);
echo '<hr>';

/*Создайте массив вида [[1, 2, 3], [4, 5, 6], [7, 8, 9]] не используя цикл. */
$arr = range(1, 9);
print_r(array_chunk($arr, 3));
echo '<hr>';

/*Дан массив с элементами 1, 2, 4, 5, 5. Найдите второй по величине элемент. В нашем случае это будет 4.*/
$arr = [1, 2, 4, 5, 5];
$arr = array_unique($arr);
sort($arr);
print_r($arr[2]);
echo '<hr>';